from PyQt6.QtWidgets import QApplication, QMainWindow, QWidget, QGridLayout, QLabel, QLineEdit, QPushButton
from PyQt6.QtCore import Qt
import json
import sys

cards = {}
with open("Army Evaluator\\Data\\cards.json","r") as file:
    cards = json.load(file) 

cardIDList = [x for x in cards]
index = -1



def Submit():
    global qWeapon
    global qRed
    global qBlack
    global qWhite
    global qRangeFrom
    global qRangeTo
    global cards
    global cardIDList
    global index
    global qKeywords
    weapons = []
    thisWeapon = {"name": qWeapon.text(),
                  "keywords": [],
                  "range": [],
                  "dice": {
                       "r": int(qRed.text()),
                       "b": int(qBlack.text()),
                       "w": int(qWhite.text())
                  }}
    
    if qRangeFrom.text() != "":
        thisWeapon["range"].append(int(qRangeFrom.text()))
        if qRangeTo.text() != "":
             thisWeapon["range"].append(int(qRangeTo.text()))

    if qKeywords.text() != "":
        for keyword in qKeywords.text().split("//"):
             if "," in keyword:
                  pair = {"name": keyword.split(",")[0],
                          "value": keyword.split(",")[1]}
                  thisWeapon["keywords"].append(pair)
             else:
                  thisWeapon["keywords"].append(keyword)

    weapons.append(thisWeapon)
    cards[cardIDList[index]]["weapons"] = weapons

    with open("Army Evaluator\\Data\\cards.json","w") as file:
        json.dump(cards, file, indent=2) 

    print(cards[cardIDList[index]])
    Next()
    pass

def Next():
    global index
    global cardIDList
    global qCardName
    global qCardID
    global qRed
    global qBlack
    global qWhite
    global qRangeFrom
    global qRangeTo
    global qKeywords
    global qWeapon
    global qRequirements
    for i in range(index + 1, len(cardIDList)):
            if cards[cardIDList[i]]["cardType"] == "upgrade":
                if cards[cardIDList[i]]["cardSubtype"] in ["heavy weapon", "personnel", "weapon", "ordnance", "armament", "hardpoint", "squad leader"]:
                    if not "weapons" in cards[cardIDList[i]]:
                        print(cards[cardIDList[i]]["cardName"], "--", cardIDList[i], "--", str(i) + "/" + str(len(cardIDList)))
                        index = i
                        break
    qCardID.setText(cardIDList[index])                        
    qCardName.setText(cards[cardIDList[index]]["cardName"])
    qWeapon.setText(cards[cardIDList[i]]["cardName"])
    req = cards[cardIDList[i]]["requirements"]
    if len(req) > 0:
        try:         
            qRequirements.setText(req[0]["cardName"])
        except (KeyError, TypeError):
            try:
                qRequirements.setText(req[0]["faction"])
            except (KeyError, TypeError):
                try:
                    qRequirements.setText(req[0]["cardSubtype"]) 
                except (KeyError, TypeError):
                    qRequirements.setText("unk")
    else:
         qRequirements.setText("")
    qRed.setText("0")
    qBlack.setText("0")
    qWhite.setText("0")
    qRangeFrom.setText("")
    qRangeTo.setText("")
    qKeywords.setText("")
    



##################################################
# GUI
##################################################

app = QApplication(sys.argv)
widget = QWidget()
window = QMainWindow()
window.setCentralWidget(widget)
window.setWindowTitle("Dice Parse Helper")
window.setMinimumSize(250,250)

mainLayout = QGridLayout()
widget.setLayout(mainLayout)

mainLayout.addWidget(QLabel("Card Name:"), 0, 0)
qCardName = QLabel("")
mainLayout.addWidget(qCardName, 0, 1)

mainLayout.addWidget(QLabel("Card ID:"), 1, 0)
qCardID = QLabel("")
mainLayout.addWidget(qCardID, 1, 1)
mainLayout.addWidget(QLabel("Requirements:"), 1, 2)
qRequirements = QLabel("")
mainLayout.addWidget(qRequirements, 1, 3)

mainLayout.addWidget(QLabel("Weapon Name:"), 2, 0)
qWeapon = QLineEdit()
mainLayout.addWidget(qWeapon, 2, 1, 1, 2)

mainLayout.addWidget(QLabel("Range:"), 3, 0)
qRangeFrom = QLineEdit()
mainLayout.addWidget(qRangeFrom, 3, 1)
qRangeTo = QLineEdit()
mainLayout.addWidget(qRangeTo, 3, 2)

mainLayout.addWidget(QLabel("Red:"), 4, 0)
qRed = QLineEdit()
mainLayout.addWidget(qRed, 4, 1)
mainLayout.addWidget(QLabel("Black:"), 4, 2)
qBlack = QLineEdit()
mainLayout.addWidget(qBlack, 4, 3)
mainLayout.addWidget(QLabel("White:"), 4, 4)
qWhite = QLineEdit()
mainLayout.addWidget(qWhite, 4, 5)

mainLayout.addWidget(QLabel("Keywords:"), 5, 0)
qKeywords = QLineEdit()
mainLayout.addWidget(qKeywords, 5, 1, 1, 5)

qSkipButton = QPushButton("Skip")
qSkipButton.clicked.connect(Next)
mainLayout.addWidget(qSkipButton, 6, 0, 1, 3)
qSubmitButton = QPushButton("Submit")
qSubmitButton.clicked.connect(Submit)
mainLayout.addWidget(qSubmitButton, 6, 3, 1, 3)

Next()

window.show()
app.exec()